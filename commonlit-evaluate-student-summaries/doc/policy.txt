Content Model 
    Main idea:  How well did the summary capture the main idea of the source
        1. title               -> how the summary is related to the title
        2. question            -> how the summary is reletad to the question
         
    Details:    How accurately did the summary capture the details from the source
        1. 

    Cohesion:   How well did the summary trainsition from one idea to the next? 
        1. count the conjection
        2. Scores of differences between sentences and sentences
        3. sentence count

Wording Model
    Voice       :  Was the summary written using objetive language
        objective word      -> calculate the ration of the number of the objective word in summary to the number of the total words in summary.
                            -> calculate the ration of the number of the unique objective word in summary to the number of the total unique words.
    Paraphrase  :  Is the summary appropriately paraphrased
        paraphrase          -> word_to_vec
                            -> calculate the ratio of the number of the word in summary to the number of the word in the prompt
    Lanuage     :  How well did the sumary use lexis and syntax
        lexis               -> count the number of unique words
        syntax              -> count the number of unique grammar



Feature not known which cagegory of each Model the belong to
    Length
        compression         -> compression ratio
    

Also give a opposite score to each model. e.g. calculate the ration of the number unique objective word in summary to the number of the total unique objective word in prompt. The ratio is then produced as logloss.


1. create error free sentence
    1. remove typo
    2. remove syntax check
2. carate some features
    * ratio of the number of the word in summary to the number of the word in the prompt
    * length of sentence in summary
    * title
    * question
3. create model using the features
    * pytorch
4. train the model


Handle in the future
quotation has a lot of expression for example
    * "dsfdsfs"
    * 'sfsdfs'
    * ... sfsdfd .....,


wordingとtextに相関はあるか？
0.7513804859701966

のように分けるのはどうか？

pre
    spellchecker
    autocorrector
    (my code for replacement) 

content
    Main idea
        title + question + prompt + (question + title)
        title + question +  text  + (question + title)
    Detail
        ngram
        same as above?
    Cohesion
        the count of conjection
        (sentence count)

    Summarised
        length

content と wording は 評価基準が違うので分けるべき
相関係数が0.75になるように調整する

数字に差がありすぎる場合は圧縮しないといけないものもある


devertav3 は tokenやidになった元


wording に　文字数は関係ない
objective and subjective word  客観的表現の抽出方法
豊富な文法表現の抽出方法


Preprocess
- nltk tokenized
- remove symbol without '.' and ','
- adding prompt title to text

LGBM
content 
- sentence ratio
- length ratio original (not tokenized)
- grammer and spell check
- word overlap (test with and without, first without)
- ngram overlap (test with and without, first without)

wording
- NN, JJ, RB
- overlaped NN, JJ and RB (nega)
- Grammer and spell check

